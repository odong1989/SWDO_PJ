<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.softsociety.binder.dao.DocumentMapper">

 	<select id="selectDocuments" parameterType="int" resultType="hashmap">
	 	select
		    d.document_no document_no
		    , d.document_content document_content
		    , to_char(d.document_regdate, 'yyyy-mm-dd') document_regdate
		    , d.document_destination document_destination
		    , p.photo_savedfile photo_savedfile
		    , (select listagg(hash_tag, ' ') within group (order by hash_no) from bnd_hashtag where document_no = d.document_no) hash_tag
		from
		    bnd_document d , bnd_photo p
		where
		    d.group_no = #{group_no}
		and
		    d.document_no = p.document_no
	    order by
   			d.document_no desc
	</select> 

 	<select id="selectCaution" parameterType="int" resultType="document">
	 	select
		    bnd_document.document_content
		from
		    bnd_document
		where
		    bnd_document.group_no = #{group_no}
		and
		    bnd_document.document_notice = 1
	</select> 
	
	<insert id="insertDocument" parameterType="document" useGeneratedKeys="true">
		<selectKey resultType="int" keyProperty="document_no" order="BEFORE">
			select bnd_document_no_seq.nextval from dual
		</selectKey>
		insert into	bnd_document(
			group_no
			,document_no
			,member_id
			,document_content
			,document_destination
			,document_regdate
			,document_finalday
		) values (
			#{group_no}
			,#{document_no}
			,#{member_id}
			,#{document_content}
			,#{document_destination}
			,to_date(#{document_regdate}, 'yyyy-mm-dd hh24:mi')
			,to_date(#{document_finalday}, 'yyyy-mm-dd hh24:mi')
		)
	</insert>
		
	<insert id="insertCaution" parameterType="document">
	insert into	bnd_document(
		group_no
		,document_no
		,member_id
		,document_content
		,document_notice
		,document_destination
		,document_regdate
		,document_finalday
	) values (
		#{group_no}
		,bnd_document_no_seq.nextval
		,#{member_id}
		,#{document_content}
		,1
		,#{document_destination}
		,to_date(#{document_regdate}, 'yyyy-mm-dd hh24:mi')
		,to_date(#{document_finalday}, 'yyyy-mm-dd hh24:mi')
	)
	</insert>
	
	<delete id="deleteCaution" parameterType="int">
		delete from
		bnd_document
		where 
		bnd_document.group_no = #{group_no}
		and
		bnd_document.document_notice = 1
	</delete>

	
	<!-- 보성작성 -->
	<!-- 1.일정리턴/풀캘린더용 -->
	<select id="selectDocumentsForCalendar" parameterType="int" resultType="hashmap">
	 	select
	 		(select '사나' from dual)									"username"
            , (select 'true' from dual)                                "allDay"
		    , bnd_document.document_destination 		            "description"			
		    , bnd_document.document_content 						"title"
		    , to_char(bnd_document.document_regdate,  'yyyy-mm-dd hh:mi')  "start"
		    , to_char(bnd_document.document_finalday, 'yyyy-mm-dd hh:mi')  "end"
		    , bnd_document.document_no								"document_no"								
			, bnd_photo.photo_savedfile								"photo_savedfile" 						
			, bnd_photo.photo_originfile							"photo_originfile"	
			, bnd_document.document_content                         "backgroundColor"			
		from
		    bnd_document , bnd_photo
		where
		    bnd_document.group_no = #{group_no}
	 	and
		    bnd_document.document_no = bnd_photo.document_no
	</select> 

	<!-- 2.글번호 리턴 -->
 	<select id="selectDocumentNoOne" parameterType="document" resultType="int">
	 	select
		    document_no
		from
		    bnd_document
		where
		    bnd_document.document_content = #{document_content}
	</select> 


	<!-- 3.  readDocument.jsp로 글을 보내기 위해 실시. -->
	<!-- document 객체는 사진정보(photo_savedfile)를 저장할 수 없기에  
		  사진을 갖고와야 하는 경우에는 selectPhotoOne 메소드를 사용합시다.-->
	<select id="selectDocumentOne" parameterType="int" resultType="hashmap">
	 	select
	 		d.document_no                                      document_no
		    , d.document_content                               document_content
		    , d.member_id 					                  member_id		
		    , to_char(d.document_regdate, 'yyyy-mm-dd hh:mi')  document_regdate
		    , to_char(d.document_finalday, 'yyyy-mm-dd hh:mi') document_finalday
		    , d.document_destination 		                  document_destination
		    , (select listagg(hash_tag, ' ') within group (order by hash_no) from bnd_hashtag where document_no = d.document_no) hash_tag			
		from
		    bnd_document d, bnd_photo p
		where
			d.document_no = #{document_no}
		and
		    p.document_no  =  #{document_no}
	</select> 

	<!-- 4. 글 1개를 삭제위한 메소드입니다. -->
	<delete id="deleteDocumentOne" parameterType="document">
		delete from
			bnd_document
		where 
			bnd_document.document_no = #{document_no}
		and
			bnd_document.member_id = #{member_id}
	</delete>


	<!-- 5.일정수정 -->
	<update id="updateDocumentOne" parameterType="document" >
	 	update
		    bnd_document
		set
    	    bnd_document.document_content = #{document_content}
    	   ,bnd_document.document_regdate = to_date(#{document_regdate}, 'yyyy-mm-dd hh24:mi')
    	   ,bnd_document.document_finalday = to_date(#{document_finalday}, 'yyyy-mm-dd hh24:mi')
      	   ,bnd_document.document_destination = #{document_destination}
		where
		    bnd_document.member_id = #{member_id}
	    and
		    bnd_document.document_no = #{document_no} 
	<!-- and
		    bnd_document.document_no = bnd_photo.document_no  -->
	</update> 

	<select id="hashSearch" parameterType="String" resultType="String">
		select distinct
			hash_tag
		from
			bnd_hashtag
		where
			hash_tag like '%' || #{hash} || '%'
	</select>
	
	<select id="sightsSearch" parameterType="String" resultType="String">
        select
            document_destination
        from
            (select
                document_destination
                , count(*) rank
            from
                (select
                    d.document_destination
                    , g.group_subcategory
                from
                    bnd_document d, bnd_group g
                where
                    d.group_no = g.group_no
                and
                    d.document_regdate > sysdate-30)
            where
                group_subcategory = #{sights}
            group by
                document_destination
            order by
                rank desc)
        where
            rownum = 1
    </select>
</mapper>
